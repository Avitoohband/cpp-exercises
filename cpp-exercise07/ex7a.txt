/*ex7a
 * =============================================================
 * Written by: Avi Toohband, id: 203341854, Login: avito
  this program is getting two strings and then it takes the following actions:
  One: print from the first string only chars, and only upper cases one!
  Two: subtract the second string from the first one and print what is left
  from it.
 */
//---Include Section----------
#include <iostream>
#include <cstdlib>
#include <cctype>
#include <iomanip>
#include <cstring> 
//---Using Section------------
using std::cout;
using std::cin;
using std::endl;
using std::setw;
//---Const Variables-----------
const int MAX_STR_LEN = 100;
//---Functions Declarations---
void get_in_str(char str[]);
void print_uppper_chars (char str[]);
void print_subbed_str1(char str[] ,char sub_str[]);
//---Main Function------------
int main()
{
    char str1[MAX_STR_LEN],  // these two string will storage.
         str2[MAX_STR_LEN];  // the chars.

    get_in_str(str1);
    get_in_str(str2);
    print_uppper_chars(str1);
    print_subbed_str1(str1, str2);

    return EXIT_SUCCESS;
}
//---Functions Sections-------
//get chars into the string.
void get_in_str(char str[])
{
    cin >> setw(MAX_STR_LEN) >> str;
}
//----------------------------
//print only upper cases char from the chosen string.
void print_uppper_chars (char str[])
{
    for(int i = 0 ; i < (int) strlen(str) ; i++)
    {
        if(isalpha(str[i]))
        {


            if(islower(str[i]))
            {
                cout << (char) toupper(str[i]);
            }
            if(isupper(str[i]))
            {
                cout << (char)str[i];

            }
        }

    }
    cout << endl;
}
//----------------------------
//subtract str2's chars from str1's chars, then print what left in str1.
void print_subbed_str1(char str[] ,char sub_str[])
{
    bool found = true;
    for (int i = 0 ; i < (int)strlen(str) ; i++)
    {
        found = true;
        for(int k = 0 ; k < (int)strlen(sub_str) ; k++)
        {

            if(str[i] == sub_str[k])
            {
                found = false;
            }

        }
           if (found)
            cout << (char)str[i];
    }
    cout << endl;
}
